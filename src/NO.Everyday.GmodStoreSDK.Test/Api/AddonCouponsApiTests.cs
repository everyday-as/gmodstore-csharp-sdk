/* 
 * GmodStore
 *
 * Welcome to the Gmodstore API! You can use our API to access Gmodstore API endpoints, which can be used interact with Gmodstore programmatically.
 *
 * OpenAPI spec version: 1.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using NO.Everyday.GmodStoreSDK.Client;
using NO.Everyday.GmodStoreSDK.Api;
using NO.Everyday.GmodStoreSDK.Model;

namespace NO.Everyday.GmodStoreSDK.Test
{
    /// <summary>
    ///  Class for testing AddonCouponsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class AddonCouponsApiTests
    {
        private AddonCouponsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new AddonCouponsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of AddonCouponsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' AddonCouponsApi
            //Assert.IsInstanceOfType(typeof(AddonCouponsApi), instance, "instance is a AddonCouponsApi");
        }

        /// <summary>
        /// Test AddonsAddonIdCouponsCouponIdDelete
        /// </summary>
        [Test]
        public void AddonsAddonIdCouponsCouponIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? addonId = null;
            //long? couponId = null;
            //instance.AddonsAddonIdCouponsCouponIdDelete(addonId, couponId);
            
        }
        /// <summary>
        /// Test AddonsAddonIdCouponsCouponIdGet
        /// </summary>
        [Test]
        public void AddonsAddonIdCouponsCouponIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? addonId = null;
            //long? couponId = null;
            //List<string> with = null;
            //var response = instance.AddonsAddonIdCouponsCouponIdGet(addonId, couponId, with);
            //Assert.IsInstanceOf<InlineResponse201> (response, "response is InlineResponse201");
        }
        /// <summary>
        /// Test AddonsAddonIdCouponsCouponIdPut
        /// </summary>
        [Test]
        public void AddonsAddonIdCouponsCouponIdPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Object body = null;
            //long? addonId = null;
            //long? couponId = null;
            //List<string> with = null;
            //var response = instance.AddonsAddonIdCouponsCouponIdPut(body, addonId, couponId, with);
            //Assert.IsInstanceOf<InlineResponse201> (response, "response is InlineResponse201");
        }
        /// <summary>
        /// Test AddonsAddonIdCouponsGet
        /// </summary>
        [Test]
        public void AddonsAddonIdCouponsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? addonId = null;
            //List<string> with = null;
            //var response = instance.AddonsAddonIdCouponsGet(addonId, with);
            //Assert.IsInstanceOf<InlineResponse2003> (response, "response is InlineResponse2003");
        }
        /// <summary>
        /// Test AddonsAddonIdCouponsPost
        /// </summary>
        [Test]
        public void AddonsAddonIdCouponsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Object body = null;
            //long? addonId = null;
            //List<string> with = null;
            //var response = instance.AddonsAddonIdCouponsPost(body, addonId, with);
            //Assert.IsInstanceOf<InlineResponse201> (response, "response is InlineResponse201");
        }
    }

}
