/* 
 * GmodStore
 *
 * Welcome to the Gmodstore API! You can use our API to access Gmodstore API endpoints, which can be used interact with Gmodstore programmatically.
 *
 * OpenAPI spec version: 1.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using NO.Everyday.GmodStoreSDK.Client;
using NO.Everyday.GmodStoreSDK.Api;
using NO.Everyday.GmodStoreSDK.Model;

namespace NO.Everyday.GmodStoreSDK.Test
{
    /// <summary>
    ///  Class for testing AddonReviewsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class AddonReviewsApiTests
    {
        private AddonReviewsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new AddonReviewsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of AddonReviewsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' AddonReviewsApi
            //Assert.IsInstanceOfType(typeof(AddonReviewsApi), instance, "instance is a AddonReviewsApi");
        }

        /// <summary>
        /// Test AddonsAddonIdReviewsGet
        /// </summary>
        [Test]
        public void AddonsAddonIdReviewsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? addonId = null;
            //List<string> with = null;
            //var response = instance.AddonsAddonIdReviewsGet(addonId, with);
            //Assert.IsInstanceOf<InlineResponse2004> (response, "response is InlineResponse2004");
        }
        /// <summary>
        /// Test AddonsAddonIdReviewsReviewIdGet
        /// </summary>
        [Test]
        public void AddonsAddonIdReviewsReviewIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? addonId = null;
            //long? reviewId = null;
            //List<string> with = null;
            //var response = instance.AddonsAddonIdReviewsReviewIdGet(addonId, reviewId, with);
            //Assert.IsInstanceOf<InlineResponse2005> (response, "response is InlineResponse2005");
        }
    }

}
